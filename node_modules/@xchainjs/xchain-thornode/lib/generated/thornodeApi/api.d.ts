/**
 * Thornode API
 * Thornode REST API.
 *
 * The version of the OpenAPI document: 1.97.2
 * Contact: devs@thorchain.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 *
 * @export
 * @interface BanResponse
 */
export interface BanResponse {
    /**
     *
     * @type {string}
     * @memberof BanResponse
     */
    'node_address'?: string;
    /**
     *
     * @type {number}
     * @memberof BanResponse
     */
    'block_height'?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof BanResponse
     */
    'signers'?: Array<string>;
}
/**
 *
 * @export
 * @interface Bucket
 */
export interface Bucket {
    /**
     *
     * @type {string}
     * @memberof Bucket
     */
    'balance_asset': string;
    /**
     *
     * @type {string}
     * @memberof Bucket
     */
    'asset': string;
    /**
     * the total pool liquidity provider units
     * @type {string}
     * @memberof Bucket
     */
    'LP_units': string;
    /**
     *
     * @type {string}
     * @memberof Bucket
     */
    'status': string;
}
/**
 *
 * @export
 * @interface BucketsResponse
 */
export interface BucketsResponse extends Array<Bucket> {
}
/**
 *
 * @export
 * @interface ChainHeight
 */
export interface ChainHeight {
    /**
     *
     * @type {string}
     * @memberof ChainHeight
     */
    'chain': string;
    /**
     *
     * @type {number}
     * @memberof ChainHeight
     */
    'height': number;
}
/**
 *
 * @export
 * @interface Coin
 */
export interface Coin {
    /**
     *
     * @type {string}
     * @memberof Coin
     */
    'asset': string;
    /**
     *
     * @type {string}
     * @memberof Coin
     */
    'amount': string;
    /**
     *
     * @type {number}
     * @memberof Coin
     */
    'decimals'?: number;
}
/**
 *
 * @export
 * @interface ConstantsResponse
 */
export interface ConstantsResponse {
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof ConstantsResponse
     */
    'int64_values'?: {
        [key: string]: string;
    };
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof ConstantsResponse
     */
    'bool_values'?: {
        [key: string]: string;
    };
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof ConstantsResponse
     */
    'string_values'?: {
        [key: string]: string;
    };
}
/**
 *
 * @export
 * @interface InboundAddress
 */
export interface InboundAddress {
    /**
     *
     * @type {string}
     * @memberof InboundAddress
     */
    'chain'?: string;
    /**
     *
     * @type {string}
     * @memberof InboundAddress
     */
    'pub_key'?: string;
    /**
     *
     * @type {string}
     * @memberof InboundAddress
     */
    'address'?: string;
    /**
     *
     * @type {string}
     * @memberof InboundAddress
     */
    'router'?: string;
    /**
     *
     * @type {boolean}
     * @memberof InboundAddress
     */
    'halted': boolean;
    /**
     * The minimum fee rate used by vaults to send outbound TXs. The actual fee rate may be higher.
     * @type {string}
     * @memberof InboundAddress
     */
    'gas_rate'?: string;
    /**
     * Units of the gas_rate.
     * @type {string}
     * @memberof InboundAddress
     */
    'gas_rate_units'?: string;
    /**
     * Avg size of outbound TXs on each chain. For UTXO chains it may be larger than average, as it takes into account vault consolidation txs, which can have many vouts
     * @type {string}
     * @memberof InboundAddress
     */
    'outbound_tx_size'?: string;
    /**
     * The total outbound fee charged to the user for outbound txs on each chain
     * @type {string}
     * @memberof InboundAddress
     */
    'outbound_fee'?: string;
}
/**
 *
 * @export
 * @interface InboundAddressesResponse
 */
export interface InboundAddressesResponse extends Array<InboundAddress> {
}
/**
 *
 * @export
 * @interface KeygenMetric
 */
export interface KeygenMetric {
    /**
     *
     * @type {string}
     * @memberof KeygenMetric
     */
    'pub_key'?: string;
    /**
     *
     * @type {Array<NodeKeygenMetric>}
     * @memberof KeygenMetric
     */
    'node_tss_times': Array<NodeKeygenMetric>;
}
/**
 *
 * @export
 * @interface KeygenMetricsResponse
 */
export interface KeygenMetricsResponse extends Array<KeygenMetric> {
}
/**
 *
 * @export
 * @interface KeysignInfo
 */
export interface KeysignInfo {
    /**
     * the block(s) in which a tx out item is scheduled to be signed and moved from the scheduled outbound queue to the outbound queue
     * @type {number}
     * @memberof KeysignInfo
     */
    'height'?: number;
    /**
     *
     * @type {Array<TxOutItem>}
     * @memberof KeysignInfo
     */
    'tx_array': Array<TxOutItem>;
}
/**
 *
 * @export
 * @interface KeysignMetrics
 */
export interface KeysignMetrics {
    /**
     *
     * @type {string}
     * @memberof KeysignMetrics
     */
    'tx_id'?: string;
    /**
     *
     * @type {Array<TssMetric>}
     * @memberof KeysignMetrics
     */
    'node_tss_times'?: Array<TssMetric>;
}
/**
 *
 * @export
 * @interface KeysignResponse
 */
export interface KeysignResponse {
    /**
     *
     * @type {KeysignInfo}
     * @memberof KeysignResponse
     */
    'keysign'?: KeysignInfo;
    /**
     *
     * @type {string}
     * @memberof KeysignResponse
     */
    'signature'?: string;
}
/**
 *
 * @export
 * @interface LastBlock
 */
export interface LastBlock {
    /**
     *
     * @type {string}
     * @memberof LastBlock
     */
    'chain': string;
    /**
     *
     * @type {number}
     * @memberof LastBlock
     */
    'last_observed_in': number;
    /**
     *
     * @type {number}
     * @memberof LastBlock
     */
    'last_signed_out': number;
    /**
     *
     * @type {number}
     * @memberof LastBlock
     */
    'thorchain': number;
}
/**
 *
 * @export
 * @interface LastBlockResponse
 */
export interface LastBlockResponse extends Array<LastBlock> {
}
/**
 *
 * @export
 * @interface LiquidityProvider
 */
export interface LiquidityProvider {
    /**
     *
     * @type {string}
     * @memberof LiquidityProvider
     */
    'asset': string;
    /**
     *
     * @type {string}
     * @memberof LiquidityProvider
     */
    'rune_address'?: string;
    /**
     *
     * @type {string}
     * @memberof LiquidityProvider
     */
    'asset_address'?: string;
    /**
     *
     * @type {number}
     * @memberof LiquidityProvider
     */
    'last_add_height'?: number;
    /**
     *
     * @type {number}
     * @memberof LiquidityProvider
     */
    'last_withdraw_height'?: number;
    /**
     *
     * @type {string}
     * @memberof LiquidityProvider
     */
    'units': string;
    /**
     *
     * @type {string}
     * @memberof LiquidityProvider
     */
    'pending_rune': string;
    /**
     *
     * @type {string}
     * @memberof LiquidityProvider
     */
    'pending_asset': string;
    /**
     *
     * @type {string}
     * @memberof LiquidityProvider
     */
    'pending_tx_Id'?: string;
    /**
     *
     * @type {string}
     * @memberof LiquidityProvider
     */
    'rune_deposit_value': string;
    /**
     *
     * @type {string}
     * @memberof LiquidityProvider
     */
    'asset_deposit_value': string;
}
/**
 *
 * @export
 * @interface LiquidityProviderResponse
 */
export interface LiquidityProviderResponse extends Array<LiquidityProvider> {
}
/**
 *
 * @export
 * @interface MetricsResponse
 */
export interface MetricsResponse {
    /**
     *
     * @type {KeygenMetricsResponse}
     * @memberof MetricsResponse
     */
    'keygen'?: KeygenMetricsResponse;
    /**
     *
     * @type {KeysignMetrics}
     * @memberof MetricsResponse
     */
    'keysign'?: KeysignMetrics;
}
/**
 *
 * @export
 * @interface MimirNodesResponse
 */
export interface MimirNodesResponse {
    /**
     *
     * @type {Array<MimirVote>}
     * @memberof MimirNodesResponse
     */
    'mimirs'?: Array<MimirVote>;
}
/**
 *
 * @export
 * @interface MimirResponse
 */
export interface MimirResponse {
    [key: string]: string;
}
/**
 *
 * @export
 * @interface MimirVote
 */
export interface MimirVote {
    /**
     *
     * @type {string}
     * @memberof MimirVote
     */
    'key'?: string;
    /**
     *
     * @type {number}
     * @memberof MimirVote
     */
    'value'?: number;
    /**
     *
     * @type {string}
     * @memberof MimirVote
     */
    'signer'?: string;
}
/**
 *
 * @export
 * @interface NetworkResponse
 */
export interface NetworkResponse {
    /**
     * total amount of RUNE awarded to node operators
     * @type {string}
     * @memberof NetworkResponse
     */
    'bond_reward_rune': string;
    /**
     * total bonded RUNE
     * @type {string}
     * @memberof NetworkResponse
     */
    'total_bond_units': string;
    /**
     * total reserve RUNE
     * @type {string}
     * @memberof NetworkResponse
     */
    'total_reserve': string;
    /**
     * total of burned BEP2 RUNE
     * @type {string}
     * @memberof NetworkResponse
     */
    'burned_bep_2_rune': string;
    /**
     * total of burned ERC20 RUNE
     * @type {string}
     * @memberof NetworkResponse
     */
    'burned_erc_20_rune': string;
}
/**
 *
 * @export
 * @interface Node
 */
export interface Node {
    /**
     *
     * @type {string}
     * @memberof Node
     */
    'node_address': string;
    /**
     *
     * @type {string}
     * @memberof Node
     */
    'status': NodeStatusEnum;
    /**
     *
     * @type {NodePubKeySet}
     * @memberof Node
     */
    'pub_key_set': NodePubKeySet;
    /**
     * the consensus pub key for the node
     * @type {string}
     * @memberof Node
     */
    'validator_cons_pub_key': string;
    /**
     * current node bond
     * @type {string}
     * @memberof Node
     */
    'bond': string;
    /**
     * the block height at which the node became active
     * @type {number}
     * @memberof Node
     */
    'active_block_height': number;
    /**
     *
     * @type {string}
     * @memberof Node
     */
    'bond_address': string;
    /**
     * the block height of the current provided information for the node
     * @type {number}
     * @memberof Node
     */
    'status_since': number;
    /**
     * the set of vault public keys of which the node is a member
     * @type {Array<string>}
     * @memberof Node
     */
    'signer_membership': Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof Node
     */
    'requested_to_leave': boolean;
    /**
     * indicates whether the node has been forced to leave by the network, typically via ban
     * @type {boolean}
     * @memberof Node
     */
    'forced_to_leave': boolean;
    /**
     *
     * @type {number}
     * @memberof Node
     */
    'leave_height': number;
    /**
     *
     * @type {string}
     * @memberof Node
     */
    'ip_address': string;
    /**
     * the currently set version of the node
     * @type {string}
     * @memberof Node
     */
    'version': string;
    /**
     * the accumlated slash points, reset at churn but excessive slash points may carry over
     * @type {number}
     * @memberof Node
     */
    'slash_points': number;
    /**
     *
     * @type {NodeJail}
     * @memberof Node
     */
    'jail': NodeJail;
    /**
     *
     * @type {string}
     * @memberof Node
     */
    'current_award': string;
    /**
     * the last observed heights for all chain by the node
     * @type {Array<ChainHeight>}
     * @memberof Node
     */
    'observe_chains': Array<ChainHeight>;
    /**
     *
     * @type {NodePreflightStatus}
     * @memberof Node
     */
    'preflight_status': NodePreflightStatus;
    /**
     *
     * @type {NodeBondProviders}
     * @memberof Node
     */
    'bond_providers': NodeBondProviders;
}
export declare const NodeStatusEnum: {
    readonly Active: "Active";
    readonly Whitelisted: "Whitelisted";
    readonly Standby: "Standby";
    readonly Disabled: "Disabled";
};
export declare type NodeStatusEnum = typeof NodeStatusEnum[keyof typeof NodeStatusEnum];
/**
 *
 * @export
 * @interface NodeBondProvider
 */
export interface NodeBondProvider {
    /**
     *
     * @type {string}
     * @memberof NodeBondProvider
     */
    'bond_address'?: string;
    /**
     *
     * @type {string}
     * @memberof NodeBondProvider
     */
    'bond'?: string;
}
/**
 *
 * @export
 * @interface NodeBondProviders
 */
export interface NodeBondProviders {
    /**
     *
     * @type {string}
     * @memberof NodeBondProviders
     */
    'node_address'?: string;
    /**
     *
     * @type {string}
     * @memberof NodeBondProviders
     */
    'node_operator_fee'?: string;
    /**
     *
     * @type {NodeBondProvider}
     * @memberof NodeBondProviders
     */
    'providers'?: NodeBondProvider;
}
/**
 *
 * @export
 * @interface NodeJail
 */
export interface NodeJail {
    /**
     *
     * @type {string}
     * @memberof NodeJail
     */
    'node_address'?: string;
    /**
     *
     * @type {number}
     * @memberof NodeJail
     */
    'release_height'?: number;
    /**
     *
     * @type {string}
     * @memberof NodeJail
     */
    'reason'?: string;
}
/**
 *
 * @export
 * @interface NodeKeygenMetric
 */
export interface NodeKeygenMetric {
    /**
     *
     * @type {string}
     * @memberof NodeKeygenMetric
     */
    'address'?: string;
    /**
     *
     * @type {string}
     * @memberof NodeKeygenMetric
     */
    'tss_time'?: string;
}
/**
 *
 * @export
 * @interface NodePreflightStatus
 */
export interface NodePreflightStatus {
    /**
     * the next status of the node
     * @type {string}
     * @memberof NodePreflightStatus
     */
    'status': string;
    /**
     * the reason for the transition to the next status
     * @type {string}
     * @memberof NodePreflightStatus
     */
    'reason': string;
    /**
     *
     * @type {number}
     * @memberof NodePreflightStatus
     */
    'code': number;
}
/**
 *
 * @export
 * @interface NodePubKeySet
 */
export interface NodePubKeySet {
    /**
     *
     * @type {string}
     * @memberof NodePubKeySet
     */
    'secp256k1'?: string;
    /**
     *
     * @type {string}
     * @memberof NodePubKeySet
     */
    'ed25519'?: string;
}
/**
 *
 * @export
 * @interface NodesResponse
 */
export interface NodesResponse extends Array<Node> {
}
/**
 *
 * @export
 * @interface ObservedTx
 */
export interface ObservedTx {
    /**
     *
     * @type {Tx}
     * @memberof ObservedTx
     */
    'tx': Tx;
    /**
     *
     * @type {string}
     * @memberof ObservedTx
     */
    'status'?: ObservedTxStatusEnum;
    /**
     *
     * @type {Array<string>}
     * @memberof ObservedTx
     */
    'out_hashes'?: Array<string>;
    /**
     * the block height of the observed transaction on the source chain, not provided if chain is THOR
     * @type {number}
     * @memberof ObservedTx
     */
    'block_height'?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof ObservedTx
     */
    'signers'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof ObservedTx
     */
    'observed_pub_key'?: string;
    /**
     *
     * @type {number}
     * @memberof ObservedTx
     */
    'keysign_ms'?: number;
    /**
     * the finalised height of the observed transaction on the source chain, not provided if chain is THOR
     * @type {number}
     * @memberof ObservedTx
     */
    'finalise_height'?: number;
    /**
     * the outbound aggregator to use, will also match a suffix
     * @type {string}
     * @memberof ObservedTx
     */
    'aggregator'?: string;
    /**
     * the aggregator target asset provided to transferOutAndCall
     * @type {string}
     * @memberof ObservedTx
     */
    'aggregator_target'?: string;
    /**
     * the aggregator target asset limit provided to transferOutAndCall
     * @type {string}
     * @memberof ObservedTx
     */
    'aggregator_target_limit'?: string;
}
export declare const ObservedTxStatusEnum: {
    readonly Done: "done";
    readonly Incomplete: "incomplete";
};
export declare type ObservedTxStatusEnum = typeof ObservedTxStatusEnum[keyof typeof ObservedTxStatusEnum];
/**
 *
 * @export
 * @interface OutboundResponse
 */
export interface OutboundResponse extends Array<TxOutItem> {
}
/**
 *
 * @export
 * @interface POLResponse
 */
export interface POLResponse {
    /**
     * total amount of RUNE deposited into the pools
     * @type {string}
     * @memberof POLResponse
     */
    'rune_deposited': string;
    /**
     * total amount of RUNE withdrawn from the pools
     * @type {string}
     * @memberof POLResponse
     */
    'rune_withdrawn': string;
    /**
     * total value of protocol\'s LP position in RUNE value
     * @type {string}
     * @memberof POLResponse
     */
    'value': string;
    /**
     * profit and loss of protocol owned liquidity
     * @type {string}
     * @memberof POLResponse
     */
    'pnl': string;
    /**
     * current amount of rune deposited
     * @type {string}
     * @memberof POLResponse
     */
    'current_deposit': string;
}
/**
 *
 * @export
 * @interface Ping
 */
export interface Ping {
    /**
     *
     * @type {string}
     * @memberof Ping
     */
    'ping'?: string;
}
/**
 *
 * @export
 * @interface Pool
 */
export interface Pool {
    /**
     *
     * @type {string}
     * @memberof Pool
     */
    'balance_rune': string;
    /**
     *
     * @type {string}
     * @memberof Pool
     */
    'balance_asset': string;
    /**
     *
     * @type {string}
     * @memberof Pool
     */
    'asset': string;
    /**
     * the total pool liquidity provider units
     * @type {string}
     * @memberof Pool
     */
    'LP_units': string;
    /**
     * the total pool units, this is the sum of LP and synth units
     * @type {string}
     * @memberof Pool
     */
    'pool_units': string;
    /**
     *
     * @type {string}
     * @memberof Pool
     */
    'status': string;
    /**
     *
     * @type {number}
     * @memberof Pool
     */
    'decimals'?: number;
    /**
     * the total synth units in the pool
     * @type {string}
     * @memberof Pool
     */
    'synth_units': string;
    /**
     * the total supply of synths for the asset
     * @type {string}
     * @memberof Pool
     */
    'synth_supply': string;
    /**
     *
     * @type {string}
     * @memberof Pool
     */
    'pending_inbound_rune': string;
    /**
     *
     * @type {string}
     * @memberof Pool
     */
    'pending_inbound_asset': string;
}
/**
 *
 * @export
 * @interface PoolsResponse
 */
export interface PoolsResponse extends Array<Pool> {
}
/**
 *
 * @export
 * @interface QueueResponse
 */
export interface QueueResponse {
    /**
     *
     * @type {number}
     * @memberof QueueResponse
     */
    'swap': number;
    /**
     * number of signed outbound tx in the queue
     * @type {number}
     * @memberof QueueResponse
     */
    'outbound': number;
    /**
     *
     * @type {number}
     * @memberof QueueResponse
     */
    'internal': number;
    /**
     * scheduled outbound value in RUNE
     * @type {string}
     * @memberof QueueResponse
     */
    'scheduled_outbound_value': string;
}
/**
 *
 * @export
 * @interface ScheduledResponse
 */
export interface ScheduledResponse extends Array<TxOutItem> {
}
/**
 *
 * @export
 * @interface Thorname
 */
export interface Thorname {
    /**
     *
     * @type {string}
     * @memberof Thorname
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof Thorname
     */
    'chain'?: string;
    /**
     *
     * @type {string}
     * @memberof Thorname
     */
    'address'?: string;
    /**
     *
     * @type {number}
     * @memberof Thorname
     */
    'expire_block_height'?: number;
}
/**
 *
 * @export
 * @interface ThornameResponse
 */
export interface ThornameResponse extends Array<Thorname> {
}
/**
 *
 * @export
 * @interface TssKeysignMetric
 */
export interface TssKeysignMetric {
    /**
     *
     * @type {string}
     * @memberof TssKeysignMetric
     */
    'tx_id'?: string;
    /**
     *
     * @type {Array<TssMetric>}
     * @memberof TssKeysignMetric
     */
    'node_tss_times': Array<TssMetric>;
}
/**
 *
 * @export
 * @interface TssMetric
 */
export interface TssMetric {
    /**
     *
     * @type {string}
     * @memberof TssMetric
     */
    'address'?: string;
    /**
     *
     * @type {number}
     * @memberof TssMetric
     */
    'tss_time'?: number;
}
/**
 *
 * @export
 * @interface Tx
 */
export interface Tx {
    /**
     *
     * @type {string}
     * @memberof Tx
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof Tx
     */
    'chain'?: string;
    /**
     *
     * @type {string}
     * @memberof Tx
     */
    'from_address'?: string;
    /**
     *
     * @type {string}
     * @memberof Tx
     */
    'to_address'?: string;
    /**
     *
     * @type {Array<Coin>}
     * @memberof Tx
     */
    'coins': Array<Coin>;
    /**
     *
     * @type {Array<Coin>}
     * @memberof Tx
     */
    'gas': Array<Coin>;
    /**
     *
     * @type {string}
     * @memberof Tx
     */
    'memo'?: string;
}
/**
 *
 * @export
 * @interface TxOutItem
 */
export interface TxOutItem {
    /**
     *
     * @type {string}
     * @memberof TxOutItem
     */
    'chain': string;
    /**
     *
     * @type {string}
     * @memberof TxOutItem
     */
    'to_address': string;
    /**
     *
     * @type {string}
     * @memberof TxOutItem
     */
    'vault_pub_key'?: string;
    /**
     *
     * @type {Coin}
     * @memberof TxOutItem
     */
    'coin': Coin;
    /**
     *
     * @type {string}
     * @memberof TxOutItem
     */
    'memo'?: string;
    /**
     *
     * @type {Array<Coin>}
     * @memberof TxOutItem
     */
    'max_gas': Array<Coin>;
    /**
     *
     * @type {number}
     * @memberof TxOutItem
     */
    'gas_rate'?: number;
    /**
     *
     * @type {string}
     * @memberof TxOutItem
     */
    'in_hash'?: string;
    /**
     *
     * @type {string}
     * @memberof TxOutItem
     */
    'out_hash'?: string;
    /**
     *
     * @type {number}
     * @memberof TxOutItem
     */
    'height': number;
}
/**
 *
 * @export
 * @interface TxResponse
 */
export interface TxResponse {
    /**
     *
     * @type {ObservedTx}
     * @memberof TxResponse
     */
    'observed_tx'?: ObservedTx;
    /**
     *
     * @type {TssKeysignMetric}
     * @memberof TxResponse
     */
    'keysign_metric'?: TssKeysignMetric;
}
/**
 *
 * @export
 * @interface TxSignersResponse
 */
export interface TxSignersResponse {
    /**
     *
     * @type {string}
     * @memberof TxSignersResponse
     */
    'tx_id'?: string;
    /**
     *
     * @type {ObservedTx}
     * @memberof TxSignersResponse
     */
    'tx': ObservedTx;
    /**
     *
     * @type {number}
     * @memberof TxSignersResponse
     */
    'height'?: number;
    /**
     *
     * @type {Array<ObservedTx>}
     * @memberof TxSignersResponse
     */
    'txs': Array<ObservedTx>;
    /**
     *
     * @type {Array<ObservedTx>}
     * @memberof TxSignersResponse
     */
    'actions': Array<ObservedTx>;
    /**
     *
     * @type {Array<string>}
     * @memberof TxSignersResponse
     */
    'out_txs': Array<string>;
    /**
     * the thorchain height at which the outbound was finalised
     * @type {number}
     * @memberof TxSignersResponse
     */
    'finalised_height'?: number;
    /**
     *
     * @type {boolean}
     * @memberof TxSignersResponse
     */
    'updated_vault'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof TxSignersResponse
     */
    'reverted'?: boolean;
    /**
     *
     * @type {number}
     * @memberof TxSignersResponse
     */
    'outbound_height'?: number;
}
/**
 *
 * @export
 * @interface Vault
 */
export interface Vault {
    /**
     *
     * @type {number}
     * @memberof Vault
     */
    'block_height'?: number;
    /**
     *
     * @type {string}
     * @memberof Vault
     */
    'pub_key'?: string;
    /**
     *
     * @type {Array<Coin>}
     * @memberof Vault
     */
    'coins': Array<Coin>;
    /**
     *
     * @type {string}
     * @memberof Vault
     */
    'type'?: VaultTypeEnum;
    /**
     *
     * @type {string}
     * @memberof Vault
     */
    'status'?: string;
    /**
     *
     * @type {number}
     * @memberof Vault
     */
    'status_since'?: number;
    /**
     * the list of node public keys which are members of the vault
     * @type {Array<string>}
     * @memberof Vault
     */
    'membership'?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof Vault
     */
    'chains'?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof Vault
     */
    'inbound_tx_count'?: number;
    /**
     *
     * @type {number}
     * @memberof Vault
     */
    'outbound_tx_count'?: number;
    /**
     *
     * @type {Array<number>}
     * @memberof Vault
     */
    'pending_tx_block_heights'?: Array<number>;
    /**
     *
     * @type {Array<VaultRouter>}
     * @memberof Vault
     */
    'routers': Array<VaultRouter>;
    /**
     *
     * @type {Array<VaultAddress>}
     * @memberof Vault
     */
    'addresses': Array<VaultAddress>;
}
export declare const VaultTypeEnum: {
    readonly AsgardVault: "AsgardVault";
    readonly YggdrasilVault: "YggdrasilVault";
};
export declare type VaultTypeEnum = typeof VaultTypeEnum[keyof typeof VaultTypeEnum];
/**
 *
 * @export
 * @interface VaultAddress
 */
export interface VaultAddress {
    /**
     *
     * @type {string}
     * @memberof VaultAddress
     */
    'chain'?: string;
    /**
     *
     * @type {string}
     * @memberof VaultAddress
     */
    'address'?: string;
}
/**
 *
 * @export
 * @interface VaultInfo
 */
export interface VaultInfo {
    /**
     *
     * @type {string}
     * @memberof VaultInfo
     */
    'pub_key': string;
    /**
     *
     * @type {Array<VaultRouter>}
     * @memberof VaultInfo
     */
    'routers': Array<VaultRouter>;
}
/**
 *
 * @export
 * @interface VaultPubkeysResponse
 */
export interface VaultPubkeysResponse {
    /**
     *
     * @type {Array<VaultInfo>}
     * @memberof VaultPubkeysResponse
     */
    'asgard': Array<VaultInfo>;
    /**
     *
     * @type {Array<VaultInfo>}
     * @memberof VaultPubkeysResponse
     */
    'yggdrasil': Array<VaultInfo>;
}
/**
 *
 * @export
 * @interface VaultRouter
 */
export interface VaultRouter {
    /**
     *
     * @type {string}
     * @memberof VaultRouter
     */
    'chain'?: string;
    /**
     *
     * @type {string}
     * @memberof VaultRouter
     */
    'router'?: string;
}
/**
 *
 * @export
 * @interface VaultsResponse
 */
export interface VaultsResponse extends Array<Vault> {
}
/**
 *
 * @export
 * @interface VersionResponse
 */
export interface VersionResponse {
    /**
     * current version
     * @type {string}
     * @memberof VersionResponse
     */
    'current': string;
    /**
     * next version
     * @type {string}
     * @memberof VersionResponse
     */
    'next': string;
    /**
     * querier version
     * @type {string}
     * @memberof VersionResponse
     */
    'querier': string;
}
/**
 * BucketsApi - axios parameter creator
 * @export
 */
export declare const BucketsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns the bucket information for the provided asset.
     * @param {string} asset
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bucket: (asset: string, height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the bucket information for all assets.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buckets: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BucketsApi - functional programming interface
 * @export
 */
export declare const BucketsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns the bucket information for the provided asset.
     * @param {string} asset
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bucket(asset: string, height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Bucket>>;
    /**
     * Returns the bucket information for all assets.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buckets(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<BucketsResponse>>;
};
/**
 * BucketsApi - factory interface
 * @export
 */
export declare const BucketsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns the bucket information for the provided asset.
     * @param {string} asset
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bucket(asset: string, height?: number | undefined, options?: any): AxiosPromise<Bucket>;
    /**
     * Returns the bucket information for all assets.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buckets(height?: number | undefined, options?: any): AxiosPromise<BucketsResponse>;
};
/**
 * BucketsApi - object-oriented interface
 * @export
 * @class BucketsApi
 * @extends {BaseAPI}
 */
export declare class BucketsApi extends BaseAPI {
    /**
     * Returns the bucket information for the provided asset.
     * @param {string} asset
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BucketsApi
     */
    bucket(asset: string, height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Bucket, any>>;
    /**
     * Returns the bucket information for all assets.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BucketsApi
     */
    buckets(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<BucketsResponse, any>>;
}
/**
 * HealthApi - axios parameter creator
 * @export
 */
export declare const HealthApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ping: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * HealthApi - functional programming interface
 * @export
 */
export declare const HealthApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ping(options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Ping>>;
};
/**
 * HealthApi - factory interface
 * @export
 */
export declare const HealthApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ping(options?: any): AxiosPromise<Ping>;
};
/**
 * HealthApi - object-oriented interface
 * @export
 * @class HealthApi
 * @extends {BaseAPI}
 */
export declare class HealthApi extends BaseAPI {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HealthApi
     */
    ping(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Ping, any>>;
}
/**
 * LiquidityProvidersApi - axios parameter creator
 * @export
 */
export declare const LiquidityProvidersApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns the liquidity provider information for an address and asset.
     * @param {string} asset
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    liquidityProvider: (asset: string, address: string, height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns all liquidity provider information for an asset.
     * @param {string} asset
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    liquidityProviders: (asset: string, height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * LiquidityProvidersApi - functional programming interface
 * @export
 */
export declare const LiquidityProvidersApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns the liquidity provider information for an address and asset.
     * @param {string} asset
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    liquidityProvider(asset: string, address: string, height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<LiquidityProviderResponse>>;
    /**
     * Returns all liquidity provider information for an asset.
     * @param {string} asset
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    liquidityProviders(asset: string, height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<LiquidityProviderResponse>>;
};
/**
 * LiquidityProvidersApi - factory interface
 * @export
 */
export declare const LiquidityProvidersApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns the liquidity provider information for an address and asset.
     * @param {string} asset
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    liquidityProvider(asset: string, address: string, height?: number | undefined, options?: any): AxiosPromise<LiquidityProviderResponse>;
    /**
     * Returns all liquidity provider information for an asset.
     * @param {string} asset
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    liquidityProviders(asset: string, height?: number | undefined, options?: any): AxiosPromise<LiquidityProviderResponse>;
};
/**
 * LiquidityProvidersApi - object-oriented interface
 * @export
 * @class LiquidityProvidersApi
 * @extends {BaseAPI}
 */
export declare class LiquidityProvidersApi extends BaseAPI {
    /**
     * Returns the liquidity provider information for an address and asset.
     * @param {string} asset
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiquidityProvidersApi
     */
    liquidityProvider(asset: string, address: string, height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<LiquidityProviderResponse, any>>;
    /**
     * Returns all liquidity provider information for an asset.
     * @param {string} asset
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiquidityProvidersApi
     */
    liquidityProviders(asset: string, height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<LiquidityProviderResponse, any>>;
}
/**
 * MimirApi - axios parameter creator
 * @export
 */
export declare const MimirApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns current active mimir configuration.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mimir: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns current admin mimir configuration.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mimirAdmin: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns current active mimir configuration for the provided key.
     * @param {string} key the mimir key to lookup
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mimirKey: (key: string, height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns current node mimir configuration for the provided node address.
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mimirNode: (address: string, height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns current node mimir votes.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mimirNodes: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * MimirApi - functional programming interface
 * @export
 */
export declare const MimirApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns current active mimir configuration.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mimir(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<MimirResponse>>;
    /**
     * Returns current admin mimir configuration.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mimirAdmin(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<MimirResponse>>;
    /**
     * Returns current active mimir configuration for the provided key.
     * @param {string} key the mimir key to lookup
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mimirKey(key: string, height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<number>>;
    /**
     * Returns current node mimir configuration for the provided node address.
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mimirNode(address: string, height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<MimirResponse>>;
    /**
     * Returns current node mimir votes.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mimirNodes(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<MimirNodesResponse>>;
};
/**
 * MimirApi - factory interface
 * @export
 */
export declare const MimirApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns current active mimir configuration.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mimir(height?: number | undefined, options?: any): AxiosPromise<MimirResponse>;
    /**
     * Returns current admin mimir configuration.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mimirAdmin(height?: number | undefined, options?: any): AxiosPromise<MimirResponse>;
    /**
     * Returns current active mimir configuration for the provided key.
     * @param {string} key the mimir key to lookup
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mimirKey(key: string, height?: number | undefined, options?: any): AxiosPromise<number>;
    /**
     * Returns current node mimir configuration for the provided node address.
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mimirNode(address: string, height?: number | undefined, options?: any): AxiosPromise<MimirResponse>;
    /**
     * Returns current node mimir votes.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mimirNodes(height?: number | undefined, options?: any): AxiosPromise<MimirNodesResponse>;
};
/**
 * MimirApi - object-oriented interface
 * @export
 * @class MimirApi
 * @extends {BaseAPI}
 */
export declare class MimirApi extends BaseAPI {
    /**
     * Returns current active mimir configuration.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MimirApi
     */
    mimir(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MimirResponse, any>>;
    /**
     * Returns current admin mimir configuration.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MimirApi
     */
    mimirAdmin(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MimirResponse, any>>;
    /**
     * Returns current active mimir configuration for the provided key.
     * @param {string} key the mimir key to lookup
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MimirApi
     */
    mimirKey(key: string, height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    /**
     * Returns current node mimir configuration for the provided node address.
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MimirApi
     */
    mimirNode(address: string, height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MimirResponse, any>>;
    /**
     * Returns current node mimir votes.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MimirApi
     */
    mimirNodes(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MimirNodesResponse, any>>;
}
/**
 * NetworkApi - axios parameter creator
 * @export
 */
export declare const NetworkApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns the ban status for the provided node address.
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ban: (address: string, height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns constant configuration, can be overridden by mimir.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    constants: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the set of asgard addresses that should be used for inbound transactions.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    inboundAddresses: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the last block information for all chains.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    lastblock: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the last block information for the provided chain.
     * @param {string} chain
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    lastblockChain: (chain: string, height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns network overview statistics.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    network: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a boolean indicating whether the chain is in ragnarok.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ragnarok: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the network\'s current THORNode version, the network\'s next THORNode version, and the querier\'s THORNode version.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    version: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * NetworkApi - functional programming interface
 * @export
 */
export declare const NetworkApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns the ban status for the provided node address.
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ban(address: string, height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<BanResponse>>;
    /**
     * Returns constant configuration, can be overridden by mimir.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    constants(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ConstantsResponse>>;
    /**
     * Returns the set of asgard addresses that should be used for inbound transactions.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    inboundAddresses(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<InboundAddressesResponse>>;
    /**
     * Returns the last block information for all chains.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    lastblock(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<LastBlockResponse>>;
    /**
     * Returns the last block information for the provided chain.
     * @param {string} chain
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    lastblockChain(chain: string, height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<LastBlockResponse>>;
    /**
     * Returns network overview statistics.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    network(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<NetworkResponse>>;
    /**
     * Returns a boolean indicating whether the chain is in ragnarok.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ragnarok(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>>;
    /**
     * Returns the network\'s current THORNode version, the network\'s next THORNode version, and the querier\'s THORNode version.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    version(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<VersionResponse>>;
};
/**
 * NetworkApi - factory interface
 * @export
 */
export declare const NetworkApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns the ban status for the provided node address.
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ban(address: string, height?: number | undefined, options?: any): AxiosPromise<BanResponse>;
    /**
     * Returns constant configuration, can be overridden by mimir.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    constants(height?: number | undefined, options?: any): AxiosPromise<ConstantsResponse>;
    /**
     * Returns the set of asgard addresses that should be used for inbound transactions.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    inboundAddresses(height?: number | undefined, options?: any): AxiosPromise<InboundAddressesResponse>;
    /**
     * Returns the last block information for all chains.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    lastblock(height?: number | undefined, options?: any): AxiosPromise<LastBlockResponse>;
    /**
     * Returns the last block information for the provided chain.
     * @param {string} chain
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    lastblockChain(chain: string, height?: number | undefined, options?: any): AxiosPromise<LastBlockResponse>;
    /**
     * Returns network overview statistics.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    network(height?: number | undefined, options?: any): AxiosPromise<NetworkResponse>;
    /**
     * Returns a boolean indicating whether the chain is in ragnarok.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ragnarok(height?: number | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Returns the network\'s current THORNode version, the network\'s next THORNode version, and the querier\'s THORNode version.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    version(height?: number | undefined, options?: any): AxiosPromise<VersionResponse>;
};
/**
 * NetworkApi - object-oriented interface
 * @export
 * @class NetworkApi
 * @extends {BaseAPI}
 */
export declare class NetworkApi extends BaseAPI {
    /**
     * Returns the ban status for the provided node address.
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkApi
     */
    ban(address: string, height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<BanResponse, any>>;
    /**
     * Returns constant configuration, can be overridden by mimir.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkApi
     */
    constants(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ConstantsResponse, any>>;
    /**
     * Returns the set of asgard addresses that should be used for inbound transactions.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkApi
     */
    inboundAddresses(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<InboundAddressesResponse, any>>;
    /**
     * Returns the last block information for all chains.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkApi
     */
    lastblock(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<LastBlockResponse, any>>;
    /**
     * Returns the last block information for the provided chain.
     * @param {string} chain
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkApi
     */
    lastblockChain(chain: string, height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<LastBlockResponse, any>>;
    /**
     * Returns network overview statistics.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkApi
     */
    network(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworkResponse, any>>;
    /**
     * Returns a boolean indicating whether the chain is in ragnarok.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkApi
     */
    ragnarok(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<boolean, any>>;
    /**
     * Returns the network\'s current THORNode version, the network\'s next THORNode version, and the querier\'s THORNode version.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkApi
     */
    version(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<VersionResponse, any>>;
}
/**
 * NodesApi - axios parameter creator
 * @export
 */
export declare const NodesApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns node information for the provided node address.
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    node: (address: string, height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns node information for all registered validators.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    nodes: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * NodesApi - functional programming interface
 * @export
 */
export declare const NodesApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns node information for the provided node address.
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    node(address: string, height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Node>>;
    /**
     * Returns node information for all registered validators.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    nodes(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<NodesResponse>>;
};
/**
 * NodesApi - factory interface
 * @export
 */
export declare const NodesApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns node information for the provided node address.
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    node(address: string, height?: number | undefined, options?: any): AxiosPromise<Node>;
    /**
     * Returns node information for all registered validators.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    nodes(height?: number | undefined, options?: any): AxiosPromise<NodesResponse>;
};
/**
 * NodesApi - object-oriented interface
 * @export
 * @class NodesApi
 * @extends {BaseAPI}
 */
export declare class NodesApi extends BaseAPI {
    /**
     * Returns node information for the provided node address.
     * @param {string} address
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NodesApi
     */
    node(address: string, height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Node, any>>;
    /**
     * Returns node information for all registered validators.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NodesApi
     */
    nodes(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<NodesResponse, any>>;
}
/**
 * POLApi - axios parameter creator
 * @export
 */
export declare const POLApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns protocol owned liquidity overview statistics.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pol: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * POLApi - functional programming interface
 * @export
 */
export declare const POLApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns protocol owned liquidity overview statistics.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pol(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<POLResponse>>;
};
/**
 * POLApi - factory interface
 * @export
 */
export declare const POLApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns protocol owned liquidity overview statistics.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pol(height?: number | undefined, options?: any): AxiosPromise<POLResponse>;
};
/**
 * POLApi - object-oriented interface
 * @export
 * @class POLApi
 * @extends {BaseAPI}
 */
export declare class POLApi extends BaseAPI {
    /**
     * Returns protocol owned liquidity overview statistics.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof POLApi
     */
    pol(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<POLResponse, any>>;
}
/**
 * PoolsApi - axios parameter creator
 * @export
 */
export declare const PoolsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns the pool information for the provided asset.
     * @param {string} asset
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pool: (asset: string, height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the pool information for all assets.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pools: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PoolsApi - functional programming interface
 * @export
 */
export declare const PoolsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns the pool information for the provided asset.
     * @param {string} asset
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pool(asset: string, height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Pool>>;
    /**
     * Returns the pool information for all assets.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pools(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<PoolsResponse>>;
};
/**
 * PoolsApi - factory interface
 * @export
 */
export declare const PoolsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns the pool information for the provided asset.
     * @param {string} asset
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pool(asset: string, height?: number | undefined, options?: any): AxiosPromise<Pool>;
    /**
     * Returns the pool information for all assets.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pools(height?: number | undefined, options?: any): AxiosPromise<PoolsResponse>;
};
/**
 * PoolsApi - object-oriented interface
 * @export
 * @class PoolsApi
 * @extends {BaseAPI}
 */
export declare class PoolsApi extends BaseAPI {
    /**
     * Returns the pool information for the provided asset.
     * @param {string} asset
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoolsApi
     */
    pool(asset: string, height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Pool, any>>;
    /**
     * Returns the pool information for all assets.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoolsApi
     */
    pools(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PoolsResponse, any>>;
}
/**
 * QueueApi - axios parameter creator
 * @export
 */
export declare const QueueApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns queue statistics.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    queue: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the outbound queue including estimated RUNE values.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    queueOutbound: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the scheduled queue.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    queueScheduled: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * QueueApi - functional programming interface
 * @export
 */
export declare const QueueApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns queue statistics.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    queue(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<QueueResponse>>;
    /**
     * Returns the outbound queue including estimated RUNE values.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    queueOutbound(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<OutboundResponse>>;
    /**
     * Returns the scheduled queue.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    queueScheduled(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ScheduledResponse>>;
};
/**
 * QueueApi - factory interface
 * @export
 */
export declare const QueueApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns queue statistics.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    queue(height?: number | undefined, options?: any): AxiosPromise<QueueResponse>;
    /**
     * Returns the outbound queue including estimated RUNE values.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    queueOutbound(height?: number | undefined, options?: any): AxiosPromise<OutboundResponse>;
    /**
     * Returns the scheduled queue.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    queueScheduled(height?: number | undefined, options?: any): AxiosPromise<ScheduledResponse>;
};
/**
 * QueueApi - object-oriented interface
 * @export
 * @class QueueApi
 * @extends {BaseAPI}
 */
export declare class QueueApi extends BaseAPI {
    /**
     * Returns queue statistics.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QueueApi
     */
    queue(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<QueueResponse, any>>;
    /**
     * Returns the outbound queue including estimated RUNE values.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QueueApi
     */
    queueOutbound(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<OutboundResponse, any>>;
    /**
     * Returns the scheduled queue.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QueueApi
     */
    queueScheduled(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ScheduledResponse, any>>;
}
/**
 * TSSApi - axios parameter creator
 * @export
 */
export declare const TSSApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns keysign information for the provided height - the height being the first block a tx out item appears in the signed-but-unobserved outbound queue.
     * @param {number} height
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    keysign: (height: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns keysign information for the provided height and pubkey - the height being the block at which a tx out item is scheduled to be signed and moved from the scheduled outbound queue to the outbound queue.
     * @param {number} height
     * @param {string} pubkey
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    keysignPubkey: (height: number, pubkey: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns keygen and keysign metrics for current vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    metrics: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns keygen metrics for the provided vault pubkey.
     * @param {string} pubkey
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    metricsKeygen: (pubkey: string, height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TSSApi - functional programming interface
 * @export
 */
export declare const TSSApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns keysign information for the provided height - the height being the first block a tx out item appears in the signed-but-unobserved outbound queue.
     * @param {number} height
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    keysign(height: number, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<KeysignResponse>>;
    /**
     * Returns keysign information for the provided height and pubkey - the height being the block at which a tx out item is scheduled to be signed and moved from the scheduled outbound queue to the outbound queue.
     * @param {number} height
     * @param {string} pubkey
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    keysignPubkey(height: number, pubkey: string, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<KeysignResponse>>;
    /**
     * Returns keygen and keysign metrics for current vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    metrics(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<MetricsResponse>>;
    /**
     * Returns keygen metrics for the provided vault pubkey.
     * @param {string} pubkey
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    metricsKeygen(pubkey: string, height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<KeygenMetricsResponse>>;
};
/**
 * TSSApi - factory interface
 * @export
 */
export declare const TSSApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns keysign information for the provided height - the height being the first block a tx out item appears in the signed-but-unobserved outbound queue.
     * @param {number} height
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    keysign(height: number, options?: any): AxiosPromise<KeysignResponse>;
    /**
     * Returns keysign information for the provided height and pubkey - the height being the block at which a tx out item is scheduled to be signed and moved from the scheduled outbound queue to the outbound queue.
     * @param {number} height
     * @param {string} pubkey
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    keysignPubkey(height: number, pubkey: string, options?: any): AxiosPromise<KeysignResponse>;
    /**
     * Returns keygen and keysign metrics for current vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    metrics(height?: number | undefined, options?: any): AxiosPromise<MetricsResponse>;
    /**
     * Returns keygen metrics for the provided vault pubkey.
     * @param {string} pubkey
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    metricsKeygen(pubkey: string, height?: number | undefined, options?: any): AxiosPromise<KeygenMetricsResponse>;
};
/**
 * TSSApi - object-oriented interface
 * @export
 * @class TSSApi
 * @extends {BaseAPI}
 */
export declare class TSSApi extends BaseAPI {
    /**
     * Returns keysign information for the provided height - the height being the first block a tx out item appears in the signed-but-unobserved outbound queue.
     * @param {number} height
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TSSApi
     */
    keysign(height: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<KeysignResponse, any>>;
    /**
     * Returns keysign information for the provided height and pubkey - the height being the block at which a tx out item is scheduled to be signed and moved from the scheduled outbound queue to the outbound queue.
     * @param {number} height
     * @param {string} pubkey
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TSSApi
     */
    keysignPubkey(height: number, pubkey: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<KeysignResponse, any>>;
    /**
     * Returns keygen and keysign metrics for current vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TSSApi
     */
    metrics(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MetricsResponse, any>>;
    /**
     * Returns keygen metrics for the provided vault pubkey.
     * @param {string} pubkey
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TSSApi
     */
    metricsKeygen(pubkey: string, height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<KeygenMetricsResponse, any>>;
}
/**
 * ThornamesApi - axios parameter creator
 * @export
 */
export declare const ThornamesApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns addresses registered to the provided thorname.
     * @param {string} name the thornode to lookup
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    thorname: (name: string, height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ThornamesApi - functional programming interface
 * @export
 */
export declare const ThornamesApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns addresses registered to the provided thorname.
     * @param {string} name the thornode to lookup
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    thorname(name: string, height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ThornameResponse>>;
};
/**
 * ThornamesApi - factory interface
 * @export
 */
export declare const ThornamesApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns addresses registered to the provided thorname.
     * @param {string} name the thornode to lookup
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    thorname(name: string, height?: number | undefined, options?: any): AxiosPromise<ThornameResponse>;
};
/**
 * ThornamesApi - object-oriented interface
 * @export
 * @class ThornamesApi
 * @extends {BaseAPI}
 */
export declare class ThornamesApi extends BaseAPI {
    /**
     * Returns addresses registered to the provided thorname.
     * @param {string} name the thornode to lookup
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ThornamesApi
     */
    thorname(name: string, height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ThornameResponse, any>>;
}
/**
 * TransactionsApi - axios parameter creator
 * @export
 */
export declare const TransactionsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns the observed transaction for a provided inbound or outbound hash.
     * @param {string} hash
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tx: (hash: string, height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the signers for a provided inbound or outbound hash.
     * @param {string} hash
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    txSigners: (hash: string, height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TransactionsApi - functional programming interface
 * @export
 */
export declare const TransactionsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns the observed transaction for a provided inbound or outbound hash.
     * @param {string} hash
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tx(hash: string, height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TxResponse>>;
    /**
     * Returns the signers for a provided inbound or outbound hash.
     * @param {string} hash
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    txSigners(hash: string, height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TxSignersResponse>>;
};
/**
 * TransactionsApi - factory interface
 * @export
 */
export declare const TransactionsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns the observed transaction for a provided inbound or outbound hash.
     * @param {string} hash
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tx(hash: string, height?: number | undefined, options?: any): AxiosPromise<TxResponse>;
    /**
     * Returns the signers for a provided inbound or outbound hash.
     * @param {string} hash
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    txSigners(hash: string, height?: number | undefined, options?: any): AxiosPromise<TxSignersResponse>;
};
/**
 * TransactionsApi - object-oriented interface
 * @export
 * @class TransactionsApi
 * @extends {BaseAPI}
 */
export declare class TransactionsApi extends BaseAPI {
    /**
     * Returns the observed transaction for a provided inbound or outbound hash.
     * @param {string} hash
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TransactionsApi
     */
    tx(hash: string, height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TxResponse, any>>;
    /**
     * Returns the signers for a provided inbound or outbound hash.
     * @param {string} hash
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TransactionsApi
     */
    txSigners(hash: string, height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TxSignersResponse, any>>;
}
/**
 * VaultsApi - axios parameter creator
 * @export
 */
export declare const VaultsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns current asgard vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    asgard: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the vault for the provided pubkey.
     * @param {string} pubkey
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    vault: (pubkey: string, height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns all pubkeys for current vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    vaultPubkeys: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns current yggdrasil vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    yggdrasil: (height?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * VaultsApi - functional programming interface
 * @export
 */
export declare const VaultsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns current asgard vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    asgard(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<VaultsResponse>>;
    /**
     * Returns the vault for the provided pubkey.
     * @param {string} pubkey
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    vault(pubkey: string, height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Vault>>;
    /**
     * Returns all pubkeys for current vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    vaultPubkeys(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<VaultPubkeysResponse>>;
    /**
     * Returns current yggdrasil vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    yggdrasil(height?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<VaultsResponse>>;
};
/**
 * VaultsApi - factory interface
 * @export
 */
export declare const VaultsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns current asgard vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    asgard(height?: number | undefined, options?: any): AxiosPromise<VaultsResponse>;
    /**
     * Returns the vault for the provided pubkey.
     * @param {string} pubkey
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    vault(pubkey: string, height?: number | undefined, options?: any): AxiosPromise<Vault>;
    /**
     * Returns all pubkeys for current vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    vaultPubkeys(height?: number | undefined, options?: any): AxiosPromise<VaultPubkeysResponse>;
    /**
     * Returns current yggdrasil vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    yggdrasil(height?: number | undefined, options?: any): AxiosPromise<VaultsResponse>;
};
/**
 * VaultsApi - object-oriented interface
 * @export
 * @class VaultsApi
 * @extends {BaseAPI}
 */
export declare class VaultsApi extends BaseAPI {
    /**
     * Returns current asgard vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VaultsApi
     */
    asgard(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<VaultsResponse, any>>;
    /**
     * Returns the vault for the provided pubkey.
     * @param {string} pubkey
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VaultsApi
     */
    vault(pubkey: string, height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Vault, any>>;
    /**
     * Returns all pubkeys for current vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VaultsApi
     */
    vaultPubkeys(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<VaultPubkeysResponse, any>>;
    /**
     * Returns current yggdrasil vaults.
     * @param {number} [height] optional block height, defaults to current tip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VaultsApi
     */
    yggdrasil(height?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<VaultsResponse, any>>;
}
